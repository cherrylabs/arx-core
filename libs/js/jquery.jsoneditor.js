/*
 * Version 1.0.0
 * Json Editor is copyright 2011 Fai Yip @ omegapi.hk@gmail.com
 *
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES
 * OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */(function(jQuery){function json_editor_commands_html(e){var t="";e.enable_new_val&&(t+=' <span class="json_create_value json_non_sortable">(+value)</span>');e.enable_new_array&&(t+=' <span class="json_create_array json_non_sortable">(+array)</span>');e.enable_export&&(t+=' <span class="json_export json_non_sortable">(export)</span>');e.enable_import&&(t+=' <span class="json_import json_non_sortable">(import)</span>');return t}function json_editor_json2ul(e,t){var n="<ul>";for(var r in e)n+=json_editor_json_val2li(e[r],r,t);n+="</ul>\n";return n}function json_editor_json_val2li(e,t,n){var r="";typeof e=="number"?parseInt(e)==e?r+=sprintf('<li json_val_type="INT"><span class="json_type_swap">Int</span> %s : %s%s</li>\n',json_editor_key_name_input(t),json_editor_key_value_input(e),json_editor_remove_html(n)):r+=sprintf('<li json_val_type="DOUBLE"><span class="json_type_swap">Double</span> %s : %s%s</li>\n',json_editor_key_name_input(t),json_editor_key_value_input(e),json_editor_remove_html(n)):typeof e=="string"?r+=sprintf('<li json_val_type="STRING"><span class="json_type_swap">String</span> %s : %s%s</li>\n',json_editor_key_name_input(t),json_editor_key_value_input(e),json_editor_remove_html(n)):typeof e=="array"||typeof e=="object"?r+=sprintf('<li json_val_type="ARRAY"><span class="json_toggle json_non_sortable">Array</span> %s%s%s%s</li>\n',json_editor_key_name_input(t),json_editor_commands_html(n),json_editor_remove_html(n),json_editor_json2ul(e,n),""):typeof e=="boolean"?r+=sprintf('<li json_val_type="BOOL"><span class="json_type_swap">Bool</span> %s : %s%s</li>\n',json_editor_key_name_input(t),json_editor_key_value_input(e),json_editor_remove_html(n)):alert(typeof e);return r}function json_editor_remove_html(e){return e.enable_remove?' <span class="json_remove json_non_sortable">(remove)</span>':""}function json_editor_ul2json(e){if(e.children("li").length==0)return{};var t={},n;e.children("li").each(function(){var e=jQuery(this).attr("json_val_type").toUpperCase();if(e=="INT"){n=parseInt(jQuery(this).children(".json_key_value").val());isNaN(n)&&(n=0);t[jQuery(this).children(".json_key_name").val()]=n}else if(e=="DOUBLE"){n=parseFloat(jQuery(this).children(".json_key_value").val());isNaN(n)&&(n=0);t[jQuery(this).children(".json_key_name").val()]=n}else if(e=="STRING")t[jQuery(this).children(".json_key_name").val()]=jQuery(this).children(".json_key_value").val();else if(e=="BOOL"){n=jQuery(this).children(".json_key_value").val();n.toLowerCase()=="false"||n=="0"||n.length==0?n=!1:n=new Boolean(n);t[jQuery(this).children(".json_key_name").val()]=n}else if(e=="ARRAY"){n=json_editor_ul2json(jQuery(jQuery(this).children("ul").get(0)));t[jQuery(jQuery(this).children(".json_key_name").get(0)).val()]=n}});return t}function json_editor_key_name_input(e){return sprintf('<input type="text" class="json_key_name" value="%s" size="20" />',e)}function json_editor_key_value_input(e){return sprintf('<input type="text" class="json_key_value" value="%s" size="20" />',e)}var methods={init:function(json_val,options){var defaults={enable_drag:!0,enable_remove:!0,enable_export:!0,enable_import:!0,enable_new_val:!0,enable_new_array:!0},innerHtml="",this_options=jQuery.extend({},defaults,options),root_parent=jQuery(this);innerHtml+=json_editor_commands_html(this_options);innerHtml+=json_editor_json2ul(json_val,this_options);jQuery(this).addClass("json_editor_div").html(innerHtml).data("json_editor",this_options);this_options.enable_drag&&jQuery(this).children("ul").sortable({items:"li:not(.json_non_sortable)",connectWith:"ul"});jQuery(".json_editor_div .json_remove").die("click").die("mouseenter").die("mouseleave").live({click:function(){jQuery(this).parent().json_editor("remove")},mouseenter:function(){return jQuery(this).parent().addClass("highlight")},mouseleave:function(){return jQuery(this).parent().removeClass("highlight")}});jQuery(".json_editor_div .json_toggle").die("click").live("click",function(){jQuery(this).parent().children(":not(.json_toggle, .json_key_name, .json_remove)").toggle()});jQuery(".json_editor_div .json_create_value").die("click").live("click",function(){jQuery(jQuery(this).parents("li, .json_editor_div").get(0)).json_editor("add_key")});jQuery(".json_editor_div .json_create_array").die("click").live("click",function(){jQuery(jQuery(this).parents("li, .json_editor_div").get(0)).json_editor("add_array")});jQuery(".json_editor_div .json_export").die("click").live("click",function(){alert(json_encode(jQuery(this).parent().json_editor("export_json")))});jQuery(".json_editor_div .json_import").die("click").live("click",function(){var tmp_val=prompt("new val");if(tmp_val)try{var json_val=eval("("+tmp_val+")");jQuery(this).parent().json_editor("import_json",json_val)}catch(e){alert("unable to parse the json string, please make sure it is format correctly")}});jQuery(".json_editor_div .json_type_swap").die("click").live("click",function(){var e=jQuery(this).parent().attr("json_val_type").toUpperCase();e=="INT"?jQuery(this).html("Double").parent().attr("json_val_type","DOUBLE"):e=="DOUBLE"?jQuery(this).html("String").parent().attr("json_val_type","STRING"):e=="STRING"?jQuery(this).html("Bool").parent().attr("json_val_type","BOOL"):e=="BOOL"&&jQuery(this).html("INT").parent().attr("json_val_type","INT")});return this},export_json:function(){var e=jQuery(this).children("ul");e.length==0&&jQuery(this).parent().hasClass("json_array")&&(e=jQuery(this).parent().children("ul"));var t=json_editor_ul2json(e);return t},import_json:function(){if(jQuery(this).hasClass("json_editor_div"))var e=jQuery(this);else var e=jQuery(jQuery(this).parents(".json_editor_div").get(0));if(e.length==0)return!1;if(arguments.length==1)var t=jQuery(this).children("ul"),n=arguments[0];else var t=jQuery(this).json_editor("get_elem",arguments[0]).children("ul"),n=arguments[1];if(t.length==0){if(!jQuery(this).parent().hasClass("json_array"))return!1;t=jQuery(this).parent().children("ul")}var r=e.data("json_editor"),i=json_editor_json2ul(n,r);t.replaceWith(i);return jQuery(this)},add_key:function(){if(jQuery(this).hasClass("json_editor_div"))var e=jQuery(this);else var e=jQuery(jQuery(this).parents(".json_editor_div").get(0));var t=jQuery(this).children("ul"),n=t.children().length;t.append(json_editor_json_val2li("",n,e.data("json_editor")));return jQuery(this)},add_array:function(){if(jQuery(this).hasClass("json_editor_div"))var e=jQuery(this);else var e=jQuery(jQuery(this).parents(".json_editor_div").get(0));var t=jQuery(this).children("ul"),n=t.children().length;t.append(json_editor_json_val2li({},n,e.data("json_editor")));return jQuery(this)},get_array:function(e){return jQuery(this).find("li[json_val_type='ARRAY'] input.json_key_name").val_equal(e).parent()},get_elem:function(e){return jQuery(this).find("ul li input.json_key_name").val_equal(e).parent()},remove:function(){jQuery(this).remove()}};jQuery.fn.json_editor=function(e){if(e=="import_json")return methods[e].apply(this,Array.prototype.slice.call(arguments,1));if(methods[e]){if(arguments.length==2&&typeof arguments[1]=="object"){var t=jQuery(this);for(var n=0;n<arguments[1].length;n++)t.length&&(t=t.json_editor("get_elem",arguments[1][n]));return t.length?e!="get_elem"?methods[e].apply(t,Array.prototype.slice.call(arguments,2)):t:jQuery(null)}return methods[e].apply(this,Array.prototype.slice.call(arguments,1))}if(typeof e=="object"||!e)return methods.init.apply(this,arguments);try{var t=jQuery(this).json_editor("get_array",arguments[0]);if(t.length==1)return t}catch(r){}jQuery.error("Method "+e+" does not exist on jQuery.json_editor ")}})(jQuery);(function(e){e.fn.val_equal=function(t){var n=[];this.map(function(r,i){e(i).val()==t&&n.push(i)});return e(n)}})(jQuery);